#!/bin/bash
#
#
# totally UNSUPPORTED script for profiling the execution of the setlX interpreter
#
#

# insert path to the folder where you copied the jar files here
setlXJarDirectory="."

# insert full path to library location here
setlXlibraryPath="$HOME/setlXlibrary/"

############################## additional options ##############################
javaParameters=""

# uncomment to force execution in 64 bit mode
#javaParameters="$javaParameters -d64"

# uncomment to execute with increased memory size (6GB) (>2GB needs 64 Bit mode!)
#javaParameters="$javaParameters -Xmx6144m"

# parameters for developing the interpreter
#javaParameters="$javaParameters -Xfuture"
#javaParameters="$javaParameters -Xprof"
javaParameters="$javaParameters -Xrunhprof:cpu=samples,interval=2,depth=8,doe=y"
#javaParameters="$javaParameters -Xrunhprof:cpu=times,depth=4,doe=y"

################################################################################

if [ -n "$OVERRIDE_setlXJarDirectory" ]
  then
    setlXJarDirectory="$OVERRIDE_setlXJarDirectory"
fi
if [ -n "$OVERRIDE_setlXjavaParameters" ]
  then
    javaParameters="$OVERRIDE_setlXjavaParameters"
fi
if [ -z "$SETLX_LIBRARY_PATH" ]
  then
    export SETLX_LIBRARY_PATH="$setlXlibraryPath"
fi

java_call="java"

if [ $(which rlwrap > /dev/null 2>&1; echo $?) -eq 0 ]
  then
    java_call="rlwrap -C $(basename $0) $java_call"
fi

jarFiles=""
while read -r -d $'\0' jarname
  do
    if [ -n "$jarFiles" ]
      then
        jarFiles="$jarFiles:"
    fi
    jarFiles="$jarFiles${jarname#./}"
done < <( find "$setlXJarDirectory" -maxdepth 1 -name "*.jar" -print0 )

if [ -n "$jarFiles" ]
  then
    time (
        $java_call -cp "$jarFiles:$CLASSPATH" $javaParameters org.randoom.setlxUI.pc.SetlX "$@"
        # strip out uninteresting stuff from profiling dump
        lnumber=$(grep -n 'CPU SAMPLES BEGIN' java.hprof.txt | awk -F: '{print $1}')
        tail -n +$lnumber java.hprof.txt
    )
else
    echo "The setlX jar files cannot be found!"
    exit 1
fi

